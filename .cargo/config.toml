[build]
rustflags = [
    #
    # Let's aggressively deny every lint that isn't already deny.
    #
    "-Dabsolute_paths_not_starting_with_crate",
    "-Dbox_pointers",
    "-Delided_lifetimes_in_paths",
    "-Dexplicit_outlives_requirements",
    "-Dkeyword_idents",
    "-Dlet_underscore_drop",
    "-Dmacro_use_extern_crate",
    "-Dmeta_variable_misuse",
    "-Dmissing_abi",
    "-Dmissing_copy_implementations",
    "-Dmissing_debug_implementations",
    "-Dnon_ascii_idents",
    "-Dnoop_method_call",
    "-Dpointer_structural_match",
    "-Drust_2021_incompatible_closure_captures",
    "-Drust_2021_incompatible_or_patterns",
    "-Drust_2021_prefixes_incompatible_syntax",
    "-Drust_2021_prelude_collisions",
    "-Dsingle_use_lifetimes",
    "-Dtrivial_casts",
    "-Dtrivial_numeric_casts",
    "-Dunreachable_pub",
    "-Dunsafe_code",
    "-Dunsafe_op_in_unsafe_fn",
    "-Dunstable_features",
    "-Dunused_crate_dependencies",
    "-Dunused_extern_crates",
    "-Dunused_import_braces",
    "-Dunused_lifetimes",
    "-Dunused_macro_rules",
    "-Dunused_qualifications",
    "-Dunused_results",
    "-Dunused_tuple_struct_fields",
    "-Dvariant_size_differences",
    "-Danonymous_parameters",
    "-Darray_into_iter",
    "-Dasm_sub_register",
    "-Dbad_asm_style",
    "-Dbare_trait_objects",
    "-Dbreak_with_label_and_loop",
    "-Dclashing_extern_declarations",
    "-Dcoherence_leak_check",
    "-Dconfusable_idents",
    "-Dconst_evaluatable_unchecked",
    "-Dconst_item_mutation",
    "-Ddead_code",
    "-Ddeprecated",
    "-Ddeprecated_where_clause_location",
    "-Dderef_into_dyn_supertrait",
    "-Dderef_nullptr",
    "-Ddrop_bounds",
    "-Dduplicate_macro_attributes",
    "-Ddyn_drop",
    "-Dellipsis_inclusive_range_patterns",
    "-Dexported_private_dependencies",
    "-Dfor_loops_over_fallibles",
    "-Dforbidden_lint_groups",
    "-Dfunction_item_references",
    "-Dillegal_floating_point_literal_pattern",
    "-Dimproper_ctypes",
    "-Dimproper_ctypes_definitions",
    "-Dincomplete_features",
    "-Dindirect_structural_match",
    "-Dinline_no_sanitize",
    "-Dinvalid_doc_attributes",
    "-Dinvalid_value",
    "-Dirrefutable_let_patterns",
    "-Dlarge_assignments",
    "-Dlate_bound_lifetime_arguments",
    "-Dlegacy_derive_helpers",
    "-Dmixed_script_confusables",
    "-Dnamed_arguments_used_positionally",
    "-Dno_mangle_generic_items",
    "-Dnon_camel_case_types",
    "-Dnon_fmt_panics",
    "-Dnon_shorthand_field_patterns",
    "-Dnon_snake_case",
    "-Dnon_upper_case_globals",
    "-Dnontrivial_structural_match",
    "-Dopaque_hidden_inferred_bound",
    "-Doverlapping_range_endpoints",
    "-Dpath_statements",
    "-Dprivate_in_public",
    "-Dredundant_semicolons",
    "-Drenamed_and_removed_lints",
    "-Drepr_transparent_external_private_fields",
    "-Dsemicolon_in_expressions_from_macros",
    "-Dspecial_module_name",
    "-Dstable_features",
    "-Dsuspicious_auto_trait_impls",
    "-Dtemporary_cstring_as_ptr",
    "-Dtrivial_bounds",
    "-Dtype_alias_bounds",
    "-Dtyvar_behind_raw_pointer",
    "-Duncommon_codepoints",
    "-Dunconditional_recursion",
    "-Dunexpected_cfgs",
    "-Dungated_async_fn_track_caller",
    "-Duninhabited_static",
    "-Dunknown_lints",
    "-Dunnameable_test_items",
    "-Dunreachable_code",
    "-Dunreachable_patterns",
    "-Dunstable_name_collisions",
    "-Dunstable_syntax_pre_expansion",
    "-Dunsupported_calling_conventions",
    "-Dunused_allocation",
    "-Dunused_assignments",
    "-Dunused_attributes",
    "-Dunused_braces",
    "-Dunused_comparisons",
    "-Dunused_doc_comments",
    "-Dunused_features",
    "-Dunused_imports",
    "-Dunused_labels",
    "-Dunused_macros",
    "-Dunused_must_use",
    "-Dunused_mut",
    "-Dunused_parens",
    "-Dunused_unsafe",
    "-Dunused_variables",
    "-Dwarnings",
    "-Dwhere_clauses_object_safety",
    "-Dwhile_true",
    #
    # And also every clippy lint
    #
    "-Dclippy::all",
]
